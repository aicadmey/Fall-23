# -*- coding: utf-8 -*-
"""deep1image.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PhRpAbe1lTOidjnMUEcL4dNp_dqrlWc6
"""

from torchvision import models

alexnet = models.AlexNet()
print(alexnet)

resnet = models.resnet101(pretrained=True)
resnet

from torchvision import transforms
preprocess = transforms.Compose([
        transforms.Resize(256),
        transforms.CenterCrop(224),
        transforms.ToTensor(),
        transforms.Normalize(
            mean=[0.485, 0.456, 0.406],
            std=[0.229, 0.224, 0.225]
        )])

"""Image Recognition"""

from PIL import Image
img = Image.open("image\\images (4).jpg")
img

import torch
img_t = preprocess(img)

batch_t = torch.unsqueeze(img_t, 0)
resnet.eval()
out = resnet(batch_t)
out

with torch.no_grad():
    out = resnet(batch_t)

# Display the top prediction and its probability
_, index = torch.max(out, 1)
percentage = torch.nn.functional.softmax(out, dim=1)[0] * 100
print(f"Prediction: {index.item()} with probability: {percentage[index.item()].item():.2f}%")

"""2nd Whats App Chat"""

import regex
import pandas as pd
import numpy as np
import emoji
from collections import Counter
import matplotlib.pyplot as plt
from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator

def date_time(s):
    pattern = '^([0-9]+)(\/)([0-9]+)(\/)([0-9]+), ([0-9]+):([0-9]+)[ ]?(AM|PM|am|pm)? -'
    result = regex.match(pattern, s)
    if result:
        return True
    return False

def find_author(s):
    s = s.split(":")
    if len(s)==2:
        return True
    else:
        return False

def getDatapoint(line):
    splitline = line.split(' - ')
    dateTime = splitline[0]
    date, time = dateTime.split(", ")
    message = " ".join(splitline[1:])
    if find_author(message):
        splitmessage = message.split(": ")
        author = splitmessage[0]
        message = " ".join(splitmessage[1:])
    else:
        author= None
    return date, time, author, message

data = []
conversation = 'WhatsApp Chat with Dil Bar Jani.txt'
with open(conversation, encoding="utf-8") as fp:
    fp.readline()
    messageBuffer = []
    date, time, author = None, None, None
    while True:
        line = fp.readline()
        if not line:
            break
        line = line.strip()
        if date_time(line):
            if len(messageBuffer) > 0:
                data.append([date, time, author, ' '.join(messageBuffer)])
            messageBuffer.clear()
            date, time, author, message = getDatapoint(line)
            messageBuffer.append(message)
        else:
            messageBuffer.append(line)

df = pd.DataFrame(data, columns=["Date", 'Time', 'Author', 'Message'])
df['Date'] = pd.to_datetime(df['Date'])
print(df.head())
print(df.tail(20))
print(df.info())
print(df.Author.unique())

total_messages = df.shape[0]
print(total_messages)

import pandas as pd

conversation = 'WhatsApp Chat with Dil Bar Jani.txt'

df = pd.read_csv(conversation, sep='\t', names=['Date', 'Time', 'Author', 'Message'])
print(df)

df.head(20)

df.tail(20)

df.dropna()

df.shape

import pandas as pd
conversation = 'WhatsApp Chat with ◌⑅⃝●♡⋆♡Mam Kinza ♡⋆♡●⑅⃝� �.txt'
df = pd.read_csv(conversation, sep='\t', names=['Date', 'Time', 'Author', 'Message'])
print(df)

df.head(30)

df.tail()